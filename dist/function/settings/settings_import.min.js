(()=>{function e(e){if(!e)return;let t=JSON.stringify(e.common,null,"\t"),n=JSON.stringify(e.bug,null,"\t"),i=JSON.stringify(e.api,null,"\t");document.getElementById("main_setting_input").value=t,document.getElementById("bug_settings_input").value=n,document.getElementById("api_settings_input").value=i}function t(e){chrome.storage.local.set({settings:e},(function(){console.log("Settings has been saved."),chrome.runtime.sendMessage("",{req:"notif",options:{title:"Settings",message:"Has been save successfully!",iconUrl:"/img/ex_logo.png",type:"basic"}},(function(e){console.log(e)}))}))}async function n(){let e=await new Promise(((e,t)=>chrome.storage.local.get("settings",(function(t){e(t)})))),t=null;return e&&e.hasOwnProperty("settings")&&(t=e.settings),t}document.getElementById("btn_import").addEventListener("click",(function(){document.getElementById("import_file").click()})),document.getElementById("btn_export").addEventListener("click",(function(){!async function(){let e=await n();var t,i=JSON.stringify(e,null,"\t").split(/\r?\n/),o={type:"text/plain"};try{t=new File(i,"settings.json",o)}catch(e){t=new Blob(i,o)}var s=URL.createObjectURL(t);console.log(s),document.getElementById("download_link").href=s}(),document.getElementById("download_link").click()})),document.getElementById("import_file").addEventListener("change",(i=>{!async function(i){let o=await async function(e){return new Promise(((t,n)=>{const i=new FileReader;i.onload=e=>t(JSON.parse(e.target.result)),i.onerror=e=>n(e),i.readAsText(e)}))}(i);confirm("Do you save config?")&&(t(o),e(await n()))}(i.target.files[0])})),document.addEventListener("DOMContentLoaded",(async function(){e(await n())})),document.getElementById("btn_save").addEventListener("click",(function(e){confirm("Do you save settings?")&&function(){let e=document.getElementById("main_setting_input").value,n=document.getElementById("bug_settings_input").value,i=document.getElementById("api_settings_input").value;t({common:JSON.parse(e),bug:JSON.parse(n),api:JSON.parse(i)})}()}))})();